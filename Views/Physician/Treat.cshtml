@model WebApplication1.Models.Appointment
@{
    ViewBag.Title = "AddCaseDetail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("Treat", "Physician", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{


    <div class="form-horizontal">
        <h4>Detail</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div>
            <div style="width:50%;height:500px;float:left">
                <div class="form-group">
                    @Html.LabelFor(model => model.ReferenceNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ReferenceNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CaseDetail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.CaseDetail, new { @class = "form-control", @rows = 10, @cols = 30, @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.CaseDetail, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.ActionLink("New Search", "Index", "Physician", null, new { @class = "btn btn-default" })
                        <input type="submit" value="Submit" class="btn btn-default" />
                    </div>
                </div>
            </div>
            <div style="width:50%;height:500px;float:left">
                <div class="form-group">
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
{
new SelectListItem{ Text="Male", Value = "Male" },
new SelectListItem{ Text="Female", Value = "Female" },
new SelectListItem{ Text="Other", Value = "Other" },
}, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AllergyDetail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.AllergyDetail, new { @class = "form-control", @rows = 5, @cols = 20, @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.AllergyDetail, "", new { @class = "text-danger" })
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(Model.PeviousPrescriptionPath))
                {
                    <div class="form-group">
                        <div class="col-md-12"><a href="@(Model.PeviousPrescriptionPath)" target="_blank">View Deatil of Previous prescription</a></div>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.CaseImagePath))
                {
                    <div class="form-group">
                        <div class="col-md-12"><a href="@(Model.CaseImagePath)" target="_blank">View Deatil of Case Image</a></div>
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorFeedback, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.DoctorFeedback, new { @class = "form-control", @rows = 5, @cols = 20 })
                        @Html.ValidationMessageFor(model => model.DoctorFeedback, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>







    </div>
}
<script>
    if ('@ViewBag.Message' != undefined && '@ViewBag.Message' != '')
        alert('@ViewBag.Message');
</script>


